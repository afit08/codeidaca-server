{"version":3,"sources":["../../server/helpers/authbasic.js"],"names":["passport","require","Strategy","expressSession","sessionSecret","process","env","SESSION_SECRET","adminPassword","ADMIN_PASSWORD","use","adminStrategy","serializeUser","user","cb","deserializeUser","authenticate","module","exports","setMiddleware","login","ensureAdmin","app","session","initialize","req","res","next","json","success","isAdmin","username","err","Error","statusCode","password","secret","resave","saveUninitialized"],"mappings":";;AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,gBAAD,CAAP,CAA0BC,QAA3C;;AACA,MAAMC,cAAc,GAAGF,OAAO,CAAC,iBAAD,CAA9B;;AAEA,MAAMG,aAAa,GAAGC,OAAO,CAACC,GAAR,CAAYC,cAAZ,IAA8B,OAApD;AACA,MAAMC,aAAa,GAAGH,OAAO,CAACC,GAAR,CAAYG,cAAZ,IAA8B,QAApD;AAGAT,QAAQ,CAACU,GAAT,CAAaC,aAAa,EAA1B;AAEAX,QAAQ,CAACY,aAAT,CAAuB,CAACC,IAAD,EAAOC,EAAP,KAAcA,EAAE,CAAC,IAAD,EAAOD,IAAP,CAAvC;AACAb,QAAQ,CAACe,eAAT,CAAyB,CAACF,IAAD,EAAOC,EAAP,KAAcA,EAAE,CAAC,IAAD,EAAOD,IAAP,CAAzC;AAEA,MAAMG,YAAY,GAAGhB,QAAQ,CAACgB,YAAT,CAAsB,OAAtB,CAArB;AAGCC,MAAM,CAACC,OAAP,GAAiB;AACdC,EAAAA,aADc;AAEdH,EAAAA,YAFc;AAGdI,EAAAA,KAHc;AAIdC,EAAAA;AAJc,CAAjB;;AASD,SAASF,aAAT,CAAuBG,GAAvB,EAA4B;AACxBA,EAAAA,GAAG,CAACZ,GAAJ,CAAQa,OAAO,EAAf;AACAD,EAAAA,GAAG,CAACZ,GAAJ,CAAQV,QAAQ,CAACwB,UAAT,EAAR;AACAF,EAAAA,GAAG,CAACZ,GAAJ,CAAQV,QAAQ,CAACuB,OAAT,EAAR;AACH;;AACD,SAASH,KAAT,CAAeK,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AAC3BD,EAAAA,GAAG,CAACE,IAAJ,CAAS;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAT;AACH;;AAED,SAASR,WAAT,CAAqBI,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AACjC,QAAMG,OAAO,GAAGL,GAAG,CAACZ,IAAJ,IAAYY,GAAG,CAACZ,IAAJ,CAASkB,QAAT,KAAsB,OAAlD;AACA,MAAID,OAAJ,EAAa,OAAOH,IAAI,EAAX;AACb,QAAMK,GAAG,GAAG,IAAIC,KAAJ,CAAU,cAAV,CAAZ;AACAD,EAAAA,GAAG,CAACE,UAAJ,GAAiB,GAAjB;AACAP,EAAAA,IAAI,CAACK,GAAD,CAAJ;AACH;;AAED,SAASrB,aAAT,GAAyB;AACrB,SAAO,IAAIT,QAAJ,CAAa,UAAU6B,QAAV,EAAoBI,QAApB,EAA8BrB,EAA9B,EAAkC;AAClD,UAAMgB,OAAO,GAAGC,QAAQ,KAAK,OAAb,IAAwBI,QAAQ,KAAK3B,aAArD;AACA,QAAIsB,OAAJ,EAAa,OAAOhB,EAAE,CAAC,IAAD,EAAO;AAAEiB,MAAAA,QAAQ,EAAE;AAAZ,KAAP,CAAT;AACbjB,IAAAA,EAAE,CAAC,IAAD,EAAO,KAAP,CAAF;AACH,GAJM,CAAP;AAKH;;AACD,SAASS,OAAT,GAAmB;AACf,SAAOpB,cAAc,CAAC;AAClBiC,IAAAA,MAAM,EAAEhC,aADU;AAElBiC,IAAAA,MAAM,EAAE,KAFU;AAGlBC,IAAAA,iBAAiB,EAAE;AAHD,GAAD,CAArB;AAKH","sourcesContent":["const passport = require('passport')\nconst Strategy = require('passport-local').Strategy\nconst expressSession = require('express-session')\n\nconst sessionSecret = process.env.SESSION_SECRET || 'admin'\nconst adminPassword = process.env.ADMIN_PASSWORD || 'secret'\n\n\npassport.use(adminStrategy())\n\npassport.serializeUser((user, cb) => cb(null, user))\npassport.deserializeUser((user, cb) => cb(null, user))\n\nconst authenticate = passport.authenticate('local')\n\n\n module.exports = {\n    setMiddleware,\n    authenticate,\n    login,\n    ensureAdmin\n} \n\n\n\nfunction setMiddleware(app) {\n    app.use(session())\n    app.use(passport.initialize())\n    app.use(passport.session())\n}\nfunction login(req, res, next) {\n    res.json({ success: true })\n}\n\nfunction ensureAdmin(req, res, next) {\n    const isAdmin = req.user && req.user.username === 'admin'\n    if (isAdmin) return next()\n    const err = new Error('Unauthorized')\n    err.statusCode = 401\n    next(err)\n}\n\nfunction adminStrategy() {\n    return new Strategy(function (username, password, cb) {\n        const isAdmin = username === 'admin' && password === adminPassword\n        if (isAdmin) return cb(null, { username: 'admin' })\n        cb(null, false)\n    })\n}\nfunction session() {\n    return expressSession({\n        secret: sessionSecret,\n        resave: false,\n        saveUninitialized: false\n    })\n} "],"file":"authbasic.js"}