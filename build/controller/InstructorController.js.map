{"version":3,"sources":["../../server/controller/InstructorController.js"],"names":["findInstructor","req","res","result","context","models","instructor","findAll","attributes","send","error","status","json","message"],"mappings":";;;;;;;AAAA;;AACA,MAAMA,cAAc,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvC,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMF,GAAG,CAACG,OAAJ,CAAYC,MAAZ,CAAmBC,UAAnB,CAA8BC,OAA9B,CAAsC;AACvD;AACY;AACZ;AACAC,MAAAA,UAAU,EAAC,CAAC,SAAD,EAAW,WAAX,EAAuB,eAAvB;AAJ4C,KAAtC,CAArB;AAMA,WAAON,GAAG,CAACO,IAAJ,CAASN,MAAT,CAAP;AACH,GARD,CAQE,OAAOO,KAAP,EAAc;AACZR,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAGH,KAAK,CAACG;AAAjB,KAArB;AACH;AACJ,CAZD;;eAcc;AACVb,EAAAA;AADU,C","sourcesContent":["import { sequelize } from \"../models/init-models\";\r\nconst findInstructor = async (req, res) => {\r\n    try {\r\n        const result = await req.context.models.instructor.findAll({\r\n            // attributes:[[sequelize.literal('DISTINCT ON `inst_name`'), 'inst_name'],'inst_id']\r\n                        // [sequelize.literal('DISTINCT `inst_id`'), 'inst_id']],\r\n            // attributes:[[sequelize.fn('DISTINCT ON', sequelize.col('inst_name')) ,'inst_name']],\r\n            attributes:['inst_id','inst_name','inst_bootcamp']\r\n        });\r\n        return res.send(result)\r\n    } catch (error) {\r\n        res.status(404).json({message : error.message})\r\n    }\r\n}\r\n\r\nexport default{\r\n    findInstructor\r\n}"],"file":"InstructorController.js"}