{"version":3,"sources":["../server/index.js"],"names":["port","process","env","PORT","app","use","express","json","urlencoded","extended","req","res","next","context","models","config","URL_DOMAIN","routes","UserRoute","URL_API","BootcampRoute","BerbayarRoute","CurriculumReviewsRoute","BatchRoute","PlacementRoute","InstructorRoute","TalentRoute","middleware","handleError","notFound","dropDatabaseSync","sequelize","sync","force","then","console","log","listen"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;;;;;;;AAZA;AACA;AASA;AAIA;AACA,MAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEA,MAAMC,GAAG,GAAG,uBAAZ,C,CACA;;AACAA,GAAG,CAACC,GAAJ,CAAQC,iBAAQC,IAAR,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,iBAAQE,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAL,GAAG,CAACC,GAAJ,CAAQ,4BAAR,E,CACA;;AACAD,GAAG,CAACC,GAAJ,CAAQ,sBAAR,E,CACA;;AACAD,GAAG,CAACC,GAAJ,CAAQ,2BAAR,E,CACA;;AACAD,GAAG,CAACC,GAAJ,CAAQ,oBAAR,E,CAEA;;AACAD,GAAG,CAACC,GAAJ,CAAQ,OAAOK,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AAChCF,EAAAA,GAAG,CAACG,OAAJ,GAAc;AAAEC,IAAAA,MAAM,EAANA;AAAF,GAAd;AACAF,EAAAA,IAAI;AACL,CAHD,E,CAKA;AAEA;;AACAR,GAAG,CAACC,GAAJ,CAAQU,gBAAOC,UAAP,GAAoB,OAA5B,EAAqCC,oBAAOC,SAA5C;AACAd,GAAG,CAACC,GAAJ,CAAQU,gBAAOI,OAAP,GAAiB,WAAzB,EAAsCF,oBAAOG,aAA7C;AACAhB,GAAG,CAACC,GAAJ,CAAQU,gBAAOI,OAAP,GAAiB,WAAzB,EAAsCF,oBAAOI,aAA7C;AACAjB,GAAG,CAACC,GAAJ,CAAQU,gBAAOI,OAAP,GAAiB,qBAAzB,EAAgDF,oBAAOK,sBAAvD;AACAlB,GAAG,CAACC,GAAJ,CAAQU,gBAAOI,OAAP,GAAiB,QAAzB,EAAmCF,oBAAOM,UAA1C;AACAnB,GAAG,CAACC,GAAJ,CAAQU,gBAAOI,OAAP,GAAiB,YAAzB,EAAuCF,oBAAOO,cAA9C;AACApB,GAAG,CAACC,GAAJ,CAAQU,gBAAOI,OAAP,GAAiB,aAAzB,EAAwCF,oBAAOQ,eAA/C;AACArB,GAAG,CAACC,GAAJ,CAAQU,gBAAOI,OAAP,GAAiB,SAAzB,EAAoCF,oBAAOS,WAA3C,E,CAEA;;AACAtB,GAAG,CAACC,GAAJ,CAAQsB,oBAAWC,WAAnB;AACAxB,GAAG,CAACC,GAAJ,CAAQsB,oBAAWE,QAAnB,E,CAEA;;AACA,MAAMC,gBAAgB,GAAG,KAAzB;;AAEAC,sBAAUC,IAAV,CAAe;AAAEC,EAAAA,KAAK,EAAEH;AAAT,CAAf,EAA4CI,IAA5C,CAAiD,YAAY;AAC3D,MAAIJ,gBAAJ,EAAsB;AACpBK,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;;AAEDhC,EAAAA,GAAG,CAACiC,MAAJ,CAAWrC,IAAX,EAAiB,MAAM;AACrBmC,IAAAA,OAAO,CAACC,GAAR,CAAa,+BAA8BpC,IAAK,EAAhD;AACD,GAFD;AAGD,CARD;;eAUeI,G","sourcesContent":["// 1. pastikan selalu import dotenv di line pertama\n//import \"dotenv/config\";\nimport config from \"./config/config\";\nimport express from \"express\";\nimport cors from \"cors\";\nimport compress from \"compression\";\nimport cookieParser from \"cookie-parser\";\nimport helmet from \"helmet\";\nimport middleware from \"./helpers/middleware\";\n\n//for access models to db\nimport models, { sequelize } from \"./models/init-models\";\nimport routes from \"./routes/IndexRoute\";\n\n// declare port\nconst port = process.env.PORT || 3001;\n\nconst app = express();\n// parse body params and attache them to req.body\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(cookieParser());\n// use helmet spy bisa dikenali SEO\napp.use(helmet());\n// secure apps by setting various HTTP headers\napp.use(compress());\n// enable CORS - Cross Origin Resource Sharing\napp.use(cors());\n\n// load models dan simpan di req.context\napp.use(async (req, res, next) => {\n  req.context = { models };\n  next();\n});\n\n//auth.setMiddleware(app);\n\n// call routes\napp.use(config.URL_DOMAIN + \"/auth\", routes.UserRoute);\napp.use(config.URL_API + \"/bootcamp\", routes.BootcampRoute);\napp.use(config.URL_API + \"/berbayar\", routes.BerbayarRoute);\napp.use(config.URL_API + \"/curriculum_reviews\", routes.CurriculumReviewsRoute);\napp.use(config.URL_API + \"/batch\", routes.BatchRoute);\napp.use(config.URL_API + \"/placement\", routes.PlacementRoute);\napp.use(config.URL_API + \"/instructor\", routes.InstructorRoute);\napp.use(config.URL_API + \"/talent\", routes.TalentRoute);\n\n//use middleware to handle error from others modules\napp.use(middleware.handleError);\napp.use(middleware.notFound);\n\n// set to false agar tidak di drop tables yang ada didatabase\nconst dropDatabaseSync = false;\n\nsequelize.sync({ force: dropDatabaseSync }).then(async () => {\n  if (dropDatabaseSync) {\n    console.log(\"Database do not drop\");\n  }\n\n  app.listen(port, () => {\n    console.log(`Server is listening on port ${port}`);\n  });\n});\n\nexport default app;\n"],"file":"index.js"}